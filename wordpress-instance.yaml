AWSTemplateFormatVersion: '2010-09-09'
Description: 'VPC with public and private subnets'

Parameters:
  VPCCidr:
    Type: String  

  PublicSubnetCidr:
    Type: String

  PublicSubnetCidr1:
    Type: String

  KeyName:
    Type: AWS::EC2::KeyPair::KeyName
    Description: Name of an existing EC2 KeyPair to enable SSH access to the instance

Mappings:
    RegionMap:
      us-east-1: 
        ami: ami-059310caab7e9f4ef
      us-east-2:
        ami: ami-0004cf65cdd4848f3
      us-west-1:
        ami: ami-041a430749b21c474 
      us-west-2:
        ami: ami-0307e792ccd82406a
      ap-south-1:
        ami: ami-0f72df1efe43a2da3
      ap-northeast-3:
        ami: ami-00bfe47f26046d071
      ap-northeast-2:
        ami: ami-0f1d085296a19e5ed
      ap-southeast-1:
        ami: ami-0347e32531c8d68cb
      ap-southeast-2:
        ami: ami-06e16ed5fccabb3d1
      ap-northeast-1:
        ami: ami-09a608f9c57306632
      ca-central-1:
        ami: ami-0740a17e1cae524d7
      eu-central-1:
        ami: ami-0d239529f028a749b
      eu-west-1:
        ami: ami-0acaaf350b3a556c9
      eu-west-2:
        ami: ami-05c1db5fc9428921b
      eu-west-3:
        ami: ami-015622dc0e9254a1a
      eu-north-1:
        ami: ami-0d85ddf96a14d93d6

Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VPCCidr
      EnableDnsSupport: true
      EnableDnsHostnames: true
      
  InternetGateway:
    Type: AWS::EC2::InternetGateway
  
  InternetGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref InternetGateway
      VpcId: !Ref VPC

  PublicSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select 
        - 0
        - Fn::GetAZs: !Ref AWS::Region
      CidrBlock: !Ref PublicSubnetCidr
      MapPublicIpOnLaunch: true

  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select 
        - 1
        - Fn::GetAZs: !Ref AWS::Region
      CidrBlock: !Ref PublicSubnetCidr1

  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC

  DefaultPublicRoute:
    Type: AWS::EC2::Route
    DependsOn: InternetGatewayAttachment
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway
      
  PublicSubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet

  PublicSubnetRouteTableAssociation1:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet1

  InstanceSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Enable SSH access via port 22
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '22'
          ToPort: '22'
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: '80'
          ToPort: '80'
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: '443'
          ToPort: '443'
          CidrIp: 0.0.0.0/0

  ElasticIP:
    Type: AWS::EC2::EIP
    DependsOn:
         - EC2Instance
    Properties:
      Domain: vpc
      
  EIPAddressAssociation:
    Type: AWS::EC2::EIPAssociation
    DependsOn:
         - EC2Instance
    Properties:
      AllocationId: !GetAtt ElasticIP.AllocationId
      NetworkInterfaceId: !Ref Eth0

  IaminstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: /
      Roles:
        - ec2elasticbeanstalk

  EC2Instance:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: !FindInMap [RegionMap, !Ref 'AWS::Region', ami]
      InstanceType: t4g.small
      KeyName: !Ref KeyName
      IamInstanceProfile: !Ref IaminstanceProfile
      NetworkInterfaces:
      - NetworkInterfaceId: !Ref 'Eth0'
        DeviceIndex: '0'
      - NetworkInterfaceId: !Ref 'Eth1'
        DeviceIndex: '1'
      UserData: 
        Fn::Base64: |
         #!/bin/bash
         sudo su
         yum update -y
         sudo amazon-linux-extras install nginx1 -y
         sudo systemctl start nginx
         sudo yum install docker -y
         sudo systemctl start docker
         sudo docker pull wordpress:6.1.1
         sudo amazon-linux-extras install epel -y
         sudo yum install python-certbot-nginx -y -y
         sudo yum install -y https://s3.amazonaws.com/ec2-downloads-windows/SSMAgent/latest/linux_amd64/amazon-ssm-agent.rpm
         sudo systemctl enable amazon-ssm-agent
         sudo systemctl start amazon-ssm-agent

  Eth0:
    Type: AWS::EC2::NetworkInterface
    Properties:
      Description: Primary network interface
      GroupSet:
        - !Ref InstanceSecurityGroup
      SecondaryPrivateIpAddressCount: 3
      SubnetId: !Ref PublicSubnet
      
  Eth1:
    Type: AWS::EC2::NetworkInterface
    Properties:
      Description: Secondary network interface
      GroupSet:
        - !Ref InstanceSecurityGroup
      SecondaryPrivateIpAddressCount: 3
      SubnetId: !Ref PublicSubnet

Outputs:
  InstanceId:
    Description: InstanceId of the newly created EC2 instance
    Value: !Ref EC2Instance
  
  PublicIp:
    Description: PublicIp of the newly created EC2 instance
    Value: !GetAtt EC2Instance.PublicIp
    
  PublicSubnet:
    Description: PublicSubnet of the newly created EC2 instance
    Value: !Ref PublicSubnet

  PublicSubnet1:
    Description: PublicSubnet1 of the newly created EC2 instance
    Value: !Ref PublicSubnet1

  VPC:
    Description: VPC of the newly created EC2 instance
    Value: !Ref VPC

  PrimaryIp:
    Description: Private IP address of network interface 0
    Value: !GetAtt Eth0.PrimaryPrivateIpAddress


  PrivateIps:
    Description: Private IP address of network interface 0
    Value: !Join [",", [!Select [0, !GetAtt Eth0.SecondaryPrivateIpAddresses], !GetAtt Eth1.PrimaryPrivateIpAddress, !Select [0, !GetAtt Eth1.SecondaryPrivateIpAddresses], !Select [1, !GetAtt Eth0.SecondaryPrivateIpAddresses], !Select [2, !GetAtt Eth0.SecondaryPrivateIpAddresses], !Select [1, !GetAtt Eth1.SecondaryPrivateIpAddresses], !Select [2, !GetAtt Eth1.SecondaryPrivateIpAddresses]]]
