AWSTemplateFormatVersion: '2010-09-09'
Description: 'VPC with public and private subnets'

Parameters:
Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 172.56.0.0/16
      EnableDnsSupport: true
      EnableDnsHostnames: true
      
  InternetGateway:
    Type: AWS::EC2::InternetGateway
  
  InternetGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref InternetGateway
      VpcId: !Ref VPC

  PublicSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select 
        - 0
        - Fn::GetAZs: !Ref AWS::Region
      CidrBlock: 172.56.11.0/24
      MapPublicIpOnLaunch: true

  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC

  DefaultPublicRoute:
    Type: AWS::EC2::Route
    DependsOn: InternetGatewayAttachment
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway
      
  PublicSubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet

  InstanceSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Enable SSH access via port 22
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '22'
          ToPort: '22'
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: '80'
          ToPort: '80'
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: '443'
          ToPort: '443'
          CidrIp: 0.0.0.0/0

  ElasticIP:
    Type: AWS::EC2::EIP
    DependsOn:
         - EC2Instance
    Properties:
      Domain: vpc
      
  EIPAddressAssociation:
    Type: AWS::EC2::EIPAssociation
    DependsOn:
         - EC2Instance
    Properties:
      AllocationId: !GetAtt ElasticIP.AllocationId
      NetworkInterfaceId: !Ref Eth0
      PrivateIpAddress: 172.56.11.25

  EC2Instance:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: ami-059310caab7e9f4ef
      InstanceType: t4g.small
      KeyName: MarketPlace
      NetworkInterfaces:
      - NetworkInterfaceId: !Ref 'Eth0'
        DeviceIndex: '0'
      UserData: 
        Fn::Base64: |
         #!/bin/bash
         sudo su
         yum update -y
         sudo amazon-linux-extras install nginx1
         sudo systemctl start nginx
         yum install docker -y
         systemctl start docker
         docker pull wordpress:latest

  Eth0:
    Type: AWS::EC2::NetworkInterface
    Properties:
      Description: Primary network interface
      GroupSet:
        - !Ref InstanceSecurityGroup
      PrivateIpAddresses:
      - PrivateIpAddress: 172.56.11.25
        Primary: 'true'
      - PrivateIpAddress: 172.56.11.50
        Primary: 'false'
      - PrivateIpAddress: 172.56.11.65
        Primary: 'false'
      - PrivateIpAddress: 172.56.11.75
        Primary: 'false'
      SourceDestCheck: true
      SubnetId: !Ref PublicSubnet
      
 
  Eth1:
    Type: AWS::EC2::NetworkInterface
    Properties:
      Description: Secondary network interface
      GroupSet:
        - !Ref InstanceSecurityGroup
      PrivateIpAddresses:
      - PrivateIpAddress: 172.56.11.85
        Primary: 'true'
      - PrivateIpAddress: 172.56.11.90
        Primary: 'false'
      - PrivateIpAddress: 172.56.11.100
        Primary: 'false'
      SourceDestCheck: true
      SubnetId: !Ref PublicSubnet

  InterfaceAttachment:
    Type: AWS::EC2::NetworkInterfaceAttachment
    DependsOn: EC2Instance
    Properties:
      DeviceIndex: '1'
      InstanceId: !Ref EC2Instance
      NetworkInterfaceId: !Ref Eth1
